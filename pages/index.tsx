import Head from 'next/head'

import Home from 'components/Home'
import { useQuery, QueryClient, dehydrate, useInfiniteQuery } from 'react-query'
import { fetchPosts } from 'api'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'

interface optionprops {
  data: any
  dehydratedState: any
}

const HomePage: React.FC<optionprops> = (props): JSX.Element => {
  const [refresh, setRefresh] = useState(1)
  const { data, isLoading, isFetching, fetchNextPage, hasNextPage, error } =
    useInfiniteQuery('posts', fetchPosts, {
      getNextPageParam: (lastPage: any, pages) => {
        if (lastPage.page < lastPage.total_pages) return lastPage.page + 1
        return false
      },
    })
  if (isLoading) return <p>Loading .....................</p>
  if (error) return <p>Something went wrong ...</p>
  const handelSSR = () => {
    fetchNextPage()
    setRefresh(refresh + 1)
  }

  return (
    <div>
      <Head>
        <title>صفحه اصلی</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Home posts={data} hasNextPage={hasNextPage} fetchNextPage={handelSSR} />
    </div>
  )
}

export default HomePage

export async function getServerSideProps({ params }) {
  const data = await fetchPosts({})

  return {
    props: {
      data,
    },
  }
}
